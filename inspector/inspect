#!/usr/bin/env python

import glob
import httplib
import os
import urllib
import uuid
import datetime
import socket
from  subprocess import Popen, PIPE

INSPECTOR_HOST = os.environ['INSPECTOR_HOSTNAME']
INSPECTOR_PORT = os.environ['INSPECTOR_PORT']

HOSTNAME = socket.gethostname()
TOKEN = str(uuid.uuid4())
TIME = datetime.datetime.today().isoformat()

ROOT = os.path.dirname(os.path.realpath(__file__))
SCRIPTS = os.path.join(ROOT, 'scripts')


def get_scripts():
    scripts = []
    for name in glob.glob(os.path.join(SCRIPTS, '*')):
        if os.path.isfile(name):
            scripts.append(name)
    return scripts

def post_result(script, stdout, stderr):
    params = {}
    params['token'] = TOKEN
    params['script'] = script
    params['stdout'] = stdout
    params['stderr'] = stderr
    params['time'] = TIME
    params['hostname'] = HOSTNAME
    params = urllib.urlencode(params)
    headers = {'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'}
    conn = httplib.HTTPConnection(host=INSPECTOR_HOST, port=INSPECTOR_PORT)
    conn.request('POST', '/insert', params, headers)
    response = conn.getresponse()
    print response.status, response.reason

def get_url():
    url = "http://"
    url += INSPECTOR_HOST
    if INSPECTOR_PORT != -1:
        url+= ":" + INSPECTOR_PORT
    url += "/inspection/" + TOKEN
    return url

def main():
    print "Inspecting. View results at %s" % get_url()
    scripts = get_scripts()
    for script in scripts:
        p = Popen(script, stdout=PIPE, stderr=PIPE)
        stdout, stderr = p.communicate()        
        post_result(os.path.basename(script), stdout, stderr)
    print "Inspection complete. View results at %s" % get_url()

if __name__ == '__main__':
    main()